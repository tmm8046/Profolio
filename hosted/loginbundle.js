(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("projectMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,r,a)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),n=await s.json();document.getElementById("projectMessage").classList.add("hidden"),n.error&&t(n.error),n.redirect&&(window.location=n.redirect),a&&a(n)},hideError:()=>{document.getElementById("projectMessage").classList.add("hidden")}}}},t={};function r(a){var s=t[a];if(void 0!==s)return s.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}(()=>{const e=r(603),t=t=>{t.preventDefault(),e.hideError();const r=t.target.querySelector("#user").value,a=t.target.querySelector("#pass").value,s=t.target.querySelector("#_csrf").value;return r&&a?(e.sendPost(t.target.action,{username:r,pass:a,_csrf:s}),!1):(e.handleError("Username or password is empty!"),!1)},a=t=>{t.preventDefault(),e.hideError();const r=t.target.querySelector("#user").value,a=t.target.querySelector("#pass").value,s=t.target.querySelector("#pass2").value,n=t.target.querySelector("#_csrf").value;return r&&a&&s?a!==s?(e.handleError("Passwords do not match!"),!1):(e.sendPost(t.target.action,{username:r,pass:a,pass2:s,_csrf:n}),!1):(e.handleError("All fields are required!"),!1)},s=e=>React.createElement("form",{id:"loginForm",name:"loginForm",onSubmit:t,action:"/login",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{className:"userInput",id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{className:"userInput",id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign in"})),n=e=>React.createElement("form",{id:"signupForm",name:"signupForm",onSubmit:a,action:"/signup",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{className:"userInput",id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{className:"userInput",id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"Password: "),React.createElement("input",{className:"userInput",id:"pass2",type:"password",name:"pass2",placeholder:"retype password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign in"}));window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json(),r=document.getElementById("loginButton"),a=document.getElementById("signupButton");r.addEventListener("click",(e=>(e.preventDefault(),ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("content")),!1))),a.addEventListener("click",(e=>(e.preventDefault(),ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("content")),!1))),ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("content"))}})()})();